<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1" xmlns="http://xmlns.jcp.org/xml/ns/javaee"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
                        http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <!-- Spring 애플리케이션 컨텍스트 설정 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/spring/root-context.xml
            /WEB-INF/spring/db-context.xml
        </param-value>
    </context-param>
    <!-- 
    	역할: 애플리케이션의 전역적인 설정 파일 (root-context.xml) 을 지정합니다. 이 파일은 주로 데이터베이스 설정이나 글로벌 빈을 정의하는 데 사용됩니다.
		주요 기능: contextConfigLocation 을 통해 스프링이 이 설정 파일을 로드하여 애플리케이션의 기본 환경을 설정합니다.
     -->

    <!-- Spring Container 리스너 설정 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- 
    	역할: ContextLoaderListener 는 애플리케이션이 시작될 때 루트 애플리케이션 컨텍스트를 초기화합니다. 이 컨텍스트는 애플리케이션 전반에서 공유되는 빈을 관리하고 초기화합니다.
		주요 기능: 애플리케이션 전역에서 사용하는 서비스, 리포지토리와 같은 빈을 관리하는 설정을 처리합니다.
     -->

    <!-- Spring MVC DispatcherServlet 설정 -->
    <servlet>
      <servlet-name>appServlet</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- 
    	역할: DispatcherServlet 은 스프링 MVC 의 핵심 서블릿으로, 모든 HTTP 요청을 받아서 컨트롤러에 전달하고, 컨트롤러가 처리한 결과를 뷰로 전달합니다.
		contextConfigLocation: 스프링 MVC 전용 설정 파일을 지정합니다. (/WEB-INF/spring/appServlet/servlet-context.xml)
		load-on-startup: 1 로 설정되어 있어 애플리케이션이 시작될 때 서블릿이 자동으로 로드됩니다.
     -->

    <!-- DispatcherServlet의 URL 매핑 설정 -->
    <servlet-mapping>
        <servlet-name>appServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!-- 
    	역할: 특정 URL 패턴에 맞는 요청을 어떤 서블릿이 처리할지 매핑합니다.
		주요 기능: url-pattern 이 / 로 설정되어 있으므로, 모든 HTTP 요청이 DispatcherServlet 으로 전달됩니다.
		이 서블릿은 스프링 MVC 의 요청 - 응답 흐름을 처리합니다.
     -->

    <!-- 인코딩 필터 설정 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 
    	역할: CharacterEncodingFilter 는 요청과 응답의 인코딩 방식을 설정하는 필터입니다.
		모든 요청 및 응답의 인코딩을 UTF-8 로 설정하여 인코딩 문제를 방지합니다.
		url-pattern 이 /* 로 설정되어 애플리케이션 전체에서 인코딩 필터가 적용됩니다.
     -->

</web-app>
